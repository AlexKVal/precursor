//
// IMPORTANT VISUAL CHANGES WHILE MENU IS ACTIVE
//
.state-menu {
  .inner {
    .shadow_canvas();
    cursor: pointer;
    background: @dye_outer;
    transition: @run_slower @bezier_deform;
    &:hover {
      .shadow_canvas(hover);
      transition-duration: @run;
    }
    &:active {
      .shadow_canvas(active);
      transition-duration: @run_fast;
    }
  }
  .canvas {
    pointer-events: none;
  }
  .canvas-background {
    transform: scale3d(.6, 0, 1);
    transition-duration: @run_slow;
  }
  .layer {
    .layer-outline,
    .handle-outline {
      stroke: @gray_light;
    }
    .text-layer,
    .edit-handle {
      fill: @gray_light;
    }
  }
  .layer-properties {
    display: none;
  }
  .radial-hint {
    display: none;
  }
  .chat-background {
    transform: scale3d(0, 0, 1);
    transition-duration: @run_slow;
  }
  .chat-log {
    color: @color_menu_faded;
    opacity: .5;
    transition: @run_fast @now @bezier_fadein;
    .message-head, // TODO this can be cleaner
    .stroke-user,
    .message-time,
    .chat-date,
    a {
      color: @color_menu_faded;
      stroke: @color_menu_faded !important;
      transition+: color @now @run_fast;
      transition+: stroke @now @run_fast;
    }
  }
  .chat-box {
    box-shadow: 0 1px @color_menu_faint inset;
    transition: box-shadow @now @run_faster @bezier_fadein;
    &:after {
      opacity: 0;
      transition: @now;
    }
  }
  .chat-placeholder,
  .chat-teach-enter {
    &:before {
      opacity: 0;
      transition: opacity @now @now @bezier_fadein;
    }
    &:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: .125em;
      height: 100%;
      background: @color_menu_faint;
      animation: in-fade @run_slower @run backwards;
    }
  }
  .hud-item {
    &:not(.menu-needed) {
      opacity: 0;
      visibility: hidden;
      transition: @now;
    }
  }
  .hud-menu,
  .hud-roster {
    .icon(stroke; @black);
  }
  .unseen-eids {
    display: none;
  }
}
//
// IMPORTANT VISUAL CHANGES WHILE MENU IS ON THE LEFT
//
.state-menu-left {
  .canvas_off(right);
  .hud-menu {
    .hud_menu_morph();
  }
  .menu-body {
    .size_of(chat; width);
  }
}
//
// IMPORTANT VISUAL CHANGES WHILE MENU IS ON THE RIGHT
//
.state-menu-right {
  .canvas_off(left);
  .hud-roster {
    .hud_menu_morph();
  }
  .menu-body {
    .size_of(chat; padding-left);
  }
}
//
// IMPORTANT VISUAL CHANGES WHILE OUTER IS ACTIVE
//
.state-outer {
  .canvas-background {
    &:after {
      animation: in-fade @run @run_fast @bezier_fadein backwards;
      .gradient(to bottom; lighten(@dye_inner, 0) 25%; darken(@dye_inner, 3) 75%);
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
  .canvas-frame {
    transform: scale3d(.8, .8, 1);
    width: 125%;
    height: 125%;
    transition+: all @run_slower @bezier_deform;
    transition+: width @now @bezier_deform;
    transition+: height @now @bezier_deform;
  }
  .grid-lines-large {
    display: none;
  }
  .grid-lines-small {
    stroke: @black;
    stroke-width: 2;
    stroke-dasharray: 1,7,3,0;
    transition: stroke @run_fast;
  }
  .layer {
    .layer-outline,
    .handle-outline {
      stroke: darken(@dye_inner, 5);
      transition-duration: @run;
    }
    .text-layer,
    .edit-handle {
      fill: darken(@dye_inner, 5);
      transition-duration: @run;
    }
  }
  .layer-properties {
    display: none;
  }
  .radial-hint {
    display: none;
  }
  .chat {
    opacity: 0; // `display:none` breaks grid in ff so use opacity
    transition: opacity @now @now;
  }
  .hud {
    display: none;
  }
}
.state-pan {
  .hud {
    pointer-events: none;
  }
  .canvas {
    &:not(:hover) {
      .pan-cursor {
        display: none;
      }
    }
  }
}
