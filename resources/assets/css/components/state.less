//
// IMPORTANT VISUAL CHANGES WHILE MENU IS ACTIVE
//
.state-menu {
  .animate_menu_opened();
  &.menu-left {
    .inner { .inner_offset(left); }
    .hud-menu { .hud_menu_morph(); }
    .menu-body { .size_of(chat; width); }
  }
  &.menu-right {
    .inner { .inner_offset(right); }
    .hud-roster { .hud_menu_morph(); }
    .menu-body { .size_of(chat; margin-left); }
  }
  .inner {
    pointer-events: none;
    transition: transform @run;
  }
  .background {
    opacity: 0;
    transform: scale(0);
  }
  .canvas {
    transform: scale(.8);
  }
  .chat,
  .foreground {
    width: 80%;
    height: 80%;
  }
  .hud-menu,
  .hud-roster {
    .icon(stroke; @black);
  }
  .hide-from-menu,
  .hud-item:not(.menu-needed) {
    display: none;
  }
}
.state-inner {
  &:not(.entry) {
    &:not(.menu-to-inner) {
      .animate_chat_closed();
    }
    &:not(.outer-to-inner) {
      .animate_menu_closed();
    }
  }
}
//
// IMPORTANT VISUAL CHANGES WHILE OUTER IS ACTIVE
//
.state-outer {
  .background {
    &:after {
      animation: in-fade @run @run_fast @bezier_fadein backwards;
      .gradient(to bottom; lighten(@dye_inner, 0) 25%; darken(@dye_inner, 3) 75%);
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
  .canvas-frame {
    transform: scale3d(.8, .8, 1);
    width: 125%;
    height: 125%;
    transition+: all @run_slower @bezier_deform;
    transition+: width @now @bezier_deform;
    transition+: height @now @bezier_deform;
  }
  .grid-lines-large {
    display: none;
  }
  .grid-lines-small {
    stroke: @black;
    stroke-width: 2;
    stroke-dasharray: 1,7,3,0;
    transition: stroke @run_fast;
  }
  .layer {
    .layer-outline,
    .handle-outline {
      stroke: darken(@dye_inner, 5);
      transition-duration: @run;
    }
    .text-layer,
    .edit-handle {
      fill: darken(@dye_inner, 5);
      transition-duration: @run;
    }
  }
  .chat {
    opacity: 0; // `display:none` breaks grid in ff so use opacity
    transition: opacity @now @now;
  }
  .hud {
    display: none;
  }
}
.state-pan {
  .hud {
    pointer-events: none;
  }
}
.chat-opened {
  .animate_chat_opened();
}
