//
// IMPORTANT VISUAL CHANGES WHILE MENU IS ACTIVE
//
.state-menu {
  .inner {
    pointer-events: none;
  }
  .hud-item {
    &:not(.menu-needed) {
      display: none;
    }
  }
  .hud-menu,
  .hud-roster {
    .icon(stroke; @black);
  }
  .message-avatar,
  .unseen-eids {
    display: none;
  }
  .chat-placeholder,
  .chat-teach-enter {
    &:before {
      display: none;
    }
    &:after {
      display: block;
    }
  }
}
.state-menu-left {
  .inner-background {
    animation: tween-transform @run_slow;
    transform: translate(50%) scale(0);
  }
  .inner-border {
    .mq_1920({ left: @canvas_pull_1920; });
    .mq_1600({ left: @canvas_pull_1600; });
    .mq_1280({ left: @canvas_pull_1280; });
     .mq_960({ left: @canvas_pull_0960; });
     .mq_640({ left: @canvas_pull_0640; });
               left: @canvas_pull_init;
  }
  .chat,
  .canvas {
    // .mq_1920({ transform: translate(@canvas_pull_1920 - 10) scale(.8); });
    // .mq_1600({ transform: translate(@canvas_pull_1600 - 10) scale(.8); });
    // .mq_1280({ transform: translate(@canvas_pull_1280 - 10) scale(.8); });
    //  .mq_960({ transform: translate(@canvas_pull_0960 - 10) scale(.8); });
    //  .mq_640({ transform: translate(@canvas_pull_0640 - 10) scale(.8); });
    //            transform: translate(@canvas_pull_init - 10) scale(.8);
    animation: canvas-chat-left @run both;
  }
  .hud-menu {
    .hud_menu_morph();
  }
  .menu-body {
    .size_of(chat; width);
  }
}
.state-menu-right {
  .inner-background {
    animation: tween-transform @run_slow;
    transform: translate(-50%) scale(0);
  }
  .inner-border {
    .mq_1920({ left: -@canvas_pull_1920 + 20; });
    .mq_1600({ left: -@canvas_pull_1600 + 20; });
    .mq_1280({ left: -@canvas_pull_1280 + 20; });
     .mq_960({ left: -@canvas_pull_0960 + 20; });
     .mq_640({ left: -@canvas_pull_0640 + 20; });
               left: -@canvas_pull_init + 20;
  }
  .chat,
  .canvas {
    .mq_1920({ transform: translate((-@canvas_pull_1920 + 10)) scale(.8); });
    .mq_1600({ transform: translate((-@canvas_pull_1600 + 10)) scale(.8); });
    .mq_1280({ transform: translate((-@canvas_pull_1280 + 10)) scale(.8); });
     .mq_960({ transform: translate((-@canvas_pull_0960 + 10)) scale(.8); });
     .mq_640({ transform: translate((-@canvas_pull_0640 + 10)) scale(.8); });
               transform: translate((-@canvas_pull_init + 10)) scale(.8);
  }
  .hud-roster {
    .hud_menu_morph();
  }
  .menu-body {
    .size_of(chat; margin-left);
  }
}
//
// IMPORTANT VISUAL CHANGES WHILE OUTER IS ACTIVE
//
.state-outer {
  .canvas-background {
    &:after {
      animation: in-fade @run @run_fast @bezier_fadein backwards;
      .gradient(to bottom; lighten(@dye_inner, 0) 25%; darken(@dye_inner, 3) 75%);
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
  .canvas-frame {
    transform: scale3d(.8, .8, 1);
    width: 125%;
    height: 125%;
    transition+: all @run_slower @bezier_deform;
    transition+: width @now @bezier_deform;
    transition+: height @now @bezier_deform;
  }
  .grid-lines-large {
    display: none;
  }
  .grid-lines-small {
    stroke: @black;
    stroke-width: 2;
    stroke-dasharray: 1,7,3,0;
    transition: stroke @run_fast;
  }
  .layer {
    .layer-outline,
    .handle-outline {
      stroke: darken(@dye_inner, 5);
      transition-duration: @run;
    }
    .text-layer,
    .edit-handle {
      fill: darken(@dye_inner, 5);
      transition-duration: @run;
    }
  }
  .chat {
    opacity: 0; // `display:none` breaks grid in ff so use opacity
    transition: opacity @now @now;
  }
  .hud {
    display: none;
  }
}
.state-pan {
  .hud {
    pointer-events: none;
  }
}
