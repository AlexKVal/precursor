.app-chat {
  .flexy(column);
  width: 20vw;
  min-width: @tile_chat;
  box-shadow: -1px 0 @gray_dark;
  overflow: hidden;
  transition: @speed @bezier_transform;
  // transition-timing-function: @bezier_bounce;
  .mq_640({
    .flex-direction(row);
    position: relative;
    padding-top: @tile;
  });
  &.closed {
    width: 0;
    min-width: 0;
    transition-timing-function: @bezier_transform;
    .icon-user {
      margin: 0 .5em;
      transition-delay: @speed_slow;
    }
    .chat-log {
      textarea {
        padding-left: 0;
        opacity: 0;
        transition-delay: @speed_slow;
      }
    }
  }
  &.show-chat-on-mobile {
    .mq_640({
      .chat-people {
        margin-left: -100%;
      }
    });
  }
  section {
    .flex(1 1 auto);
    .flexy(column);
    width: 20vw;
    min-width: 16rem;
    min-height: @tile_chat;
    .mq_640({
      .flex(0 0 100%);
      transition: @speed;
    });
  }
}
.chat-switcher {
  display: none;
  position: absolute;
  color: @white;
  top: 0;
  left: 0;
  width: @tile_chat;
  .mq_640({
    .flexy();
  });
}
.chat-switcher-option {
  .flex(0 0 50%);
  .flexy(center, center);
  height: @tile;
  &:not(.toggled) {
    color: @gray;
    background: fade(@black, 13);
  }
}
.chat-people {
  .scrollbar_hide(); // we should calculate to get this effect in the dom
  overflow-y: auto;
  a {
    &[role="button"] {
      .flex(0 0 @tile);
      .flexy(center);
      .button_icon_cascade(32);
      .icon_stroke(@gray_lighter);
      min-height: (@tile / 2);
      color: @gray_light;
      &:hover,
      &:active {
        .icon_stroke(@gray_lightest);
        cursor: pointer;
        color: @gray_lighter;
        background: @gray_dark;
      }
      &.people-you {
        cursor: text;
      }
    }
  }
  .icon-user {
    .flex(0 0 auto);
    margin: 0 1em;
    transition: margin @speed @bezier_transform 0ms;
  }
  input {
    height: @tile;
    max-height: (@tile * 2);
    background: none;
    border: none;
    outline: 0;
    color: @white;
  }
}
.chat-log {
  .justify-content(flex-end);
  form {
    .flex(0 0 auto);
    .flexy();
    margin: 0;
    box-shadow: 0 1px @gray_dark inset;
  }
  textarea {
    .flex(1);
    .placeholder_style(color; @gray_dark);
    height: @tile;
    max-height: (@tile * 2);
    background: none;
    padding: 1.25em 1.25em 0;
    border: none;
    outline: 0;
    resize: none;
    transition+: padding @speed @bezier_transform 0ms;
    transition+: opacity @speed @bezier_fadein    0ms;
    &:focus {
      .placeholder_style(color; fade(@gray_dark, 0));
    }
  }
}
.chat-messages {
  .scrollbar_hide(); // TODO we should calculate to get this effect in the dom
  padding: 1em 0;
  overflow-y: auto;
  .mq_640({
    width: @tile_chat;
  });
  span {
    word-break: break-word;
  }
}
.chat-date {
  color: @gray_dark;
  margin: 0;
  padding-left: 1rem;
  text-indent: -.25rem; // better aligns h2 with chats
}
.chat-message {
  padding: 0 .125rem 0 1rem;
  a {
    transition: @speed_fast @bezier_fadein;
    &:not(:hover) {
      color: inherit;
      // TODO make a function for this thing (also used in blog.less)
      box-shadow+:   0  -1px @gray_darker inset;
      box-shadow+:   0  -2px @gray_light  inset;
      text-shadow+:  1px 0   @gray_darker;
      text-shadow+:  2px 0   @gray_darker;
      text-shadow+:  3px 0   @gray_darker;
      text-shadow+: -1px 0   @gray_darker;
      text-shadow+: -2px 0   @gray_darker;
      text-shadow+: -3px 0   @gray_darker;
    }
  }
}
.message-head {
  .flexy();
}
.message-time {
  color: @gray_dark;
  font-size: 0.75rem;
  line-height: ~"@{line_height}rem";
  text-transform: lowercase;
  word-spacing: -.1875rem;
  margin-left: .5rem;
}
.unseen-eids {
  .animation(in-bounce (@speed * 2));
  .user-select(none);
  position: absolute;
  font-family: @font_mono;
  font-size: 0.625rem;
  line-height: 1em;
  bottom: 3.2em;
  right: 3.2em;
  height: 1.6em;
  min-width: 1.6em;
  padding: 2px 3px;
  color: @red;
  background: @gray_darker;
  border: 2px solid @red;
  border-radius: 2rem;
  box-shadow: 0 2px @gray_darker, 2px 0 @gray_darker, 2px 2px @gray_darker;
  pointer-events: none;
  transition: @speed @bezier_transform;
}
.chat-button {
  .icon_stroke(@gray);
  .flexy(center, center);
  position: absolute;
  font-size: 1.5em;
  bottom: 0;
  right: 0;
  width: @tile;
  height: @tile;
  &:hover {
    .icon_stroke(@white);
    .unseen-eids {
      background: @red;
      color: @white;
      border-color: @red;
      height: 1.8em;
      min-width: 1.8em;
      padding: 2px 4px;
      bottom: 3.1em;
      right: 3.1em;
    }
  }
}
