@radial_tools:
  ellipse,   159.01px,  49.71px,
  rectangle, 199.00px, 119.00px,
  line,      159.01px, 188.29px,
  pencil,     79.00px, 188.29px,
  text,       39.00px, 119.52px,
  select,     82.66px,  49.71px;
.shape_position(@array; @count: length(@array); @name_value: -2; @x_value: -1; @y_value: 0; @icon_scale: .2) when (@count > (length(@array) / 3)) {
  .shape_position(@array; (@count - 2); (@name_value - 1); (@x_value - 1); (@y_value - 1); @icon_scale);    // <-- Loop to next iteration until count is 0
  @name:     extract(@array, (@count + @name_value));                                                       //
  @x_offset: extract(@array, (@count + @x_value)) * (1 / @icon_scale);                                      //
  @y_offset: extract(@array, (@count + @y_value)) * (1 / @icon_scale);                                      //
  &.shape-@{name} {.transform(scale3d(@icon_scale, @icon_scale, 1); translate3d(@x_offset, @y_offset, 0));} // <-- Actual style to written for each array item
}
.app-hud {
  > a {
    &[role="button"] {
      .animation(in-bounce @speed_slower backwards);
      .flexy(center, center);
      .icon(stroke; @white);
      .icon(fill; @white);
      position: fixed;
      font-size: 1.5em;
      width: @tile;
      height: @tile;
      &:not(:hover) {
        [class|="icon"] {
          opacity: .5;
        }
      }
    }
  }
}
.radial-menu {
  position: fixed;
  width: @tile_radial;
  height: @tile_radial;
  z-index: @zindex_radial_menu;
}
.radial-buttons {
  width: @tile_radial + 2;
  height: @tile_radial + 2;
  margin-left: -1em;
  margin-top: -1em;
  padding: 1rem;
  overflow: visible;
}
.radial-button {
  cursor: pointer;
  transition: @speed @bezier_transform;
  &:hover {
    .transform(translate3d(-13px, -13px, 0); scale3d(1.1, 1.1, 1));
    transition-duration: @speed_fast;
    .radial-pie {
      fill: @gray_dark;
      transition-duration: @speed_fast;
    }
    .radial-icon {
      stroke: @white;
      transition-duration: @speed_fast;
    }
  }
  &:active {
    .radial-pie {
      fill: @gray_darker;
    }
  }
}
.radial-pie {
  fill: @gray_darker;
  stroke: @gray_dark;
  transition: @speed @bezier_transform;
}
.radial-icon {
  .shape_position(@radial_tools);
  fill: none;
  stroke: @gray;
  stroke-width: 8;
  pointer-events: none;
  transition: @speed @bezier_fadein;
}
.radial-point {
  fill: @gray_dark;
}
.radial-hint {
  .user-select(none);
  position: absolute;
  top: -@tile;
  left: -@tile;
  white-space: nowrap;
  .mq_640({
    display: none;
  });
}
.menu-toggle {
  .animation(in-fade-top @speed_slower @speed_slower @bezier_fadein backwards);
  top: 0;
  left: 0;
  transition+: -webkit-transform @speed @bezier_deform;
  transition+:         transform @speed @bezier_deform;
  &.bkg-light {
    .icon-menu {
      .icon(stroke; @black);
    }
  }
  &.close,
  &.back {
    .scale3d(.75);
  }
  &.close {
    .stroke-menu-top { .transform(translate3d(  32.32px, -3.03px, 0) rotate3d(0, 0, 1,  45deg));}
    .stroke-menu-mid { .transform(translate3d( -20.71px,    50px, 0) rotate3d(0, 0, 1, -45deg)); opacity: 0;}
    .stroke-menu-btm { .transform(translate3d( -38.39px, 32.32px, 0) rotate3d(0, 0, 1, -45deg));}
  }
  &.back {
    .stroke-menu-top { .transform(translate3d(  20px, 28px, 0) rotate3d(0, 0, 1,  45deg) scale3d(.5, 1, 1));}
    .stroke-menu-mid { .transform(translate3d(     0,    0, 0) rotate3d(0, 0, 0, -45deg) scale3d( 1, 1, 1));}
    .stroke-menu-btm { .transform(translate3d( -51px,  1px, 0) rotate3d(0, 0, 1, -45deg) scale3d(.5, 1, 1));}
  }
  path {
    transition+: opacity @speed @now @bezier_fadein;
    transition+: stroke @speed_fast @speed_fast @bezier_fadein;
    transition+: -webkit-transform @speed_slow @now @bezier_deform;
    transition+:         transform @speed_slow @now @bezier_deform;
  }
}
.chat-toggle {
  .animation(in-fade-bottom @speed_slower @speed_slower @bezier_fadein backwards);
  bottom: 0;
  right: 0;
  &:hover {
    .unseen-eids {
      background: @red;
      color: @white;
      border-color: @red;
      height: 1.8em;
      min-width: 1.8em;
      padding: 2px 4px;
      bottom: 3.1em;
      right: 3.1em;
    }
  }
  &:not(.open) {
    width: 3rem !important;
    right: .5rem;
    .stroke-chat {
      .transform(translate3d(0,100%,0) scale3d(0,0,1));
      transition-delay: @now;
    }
  }
  &.open {
    .fill-x1 { .translate3d(    25px,    25px, 0); opacity: 0;}
    .fill-x2 { .translate3d(       0,    25px, 0);}
    .fill-x3 { .translate3d( -12.5px,  12.5px, 0); opacity: 0;}
    .fill-x4 { .translate3d( -12.5px,  12.5px, 0); opacity: 0;}
    .fill-x5 { .translate3d(       0,       0, 0);}
    .fill-x6 { .translate3d(  12.5px, -12.5px, 0); opacity: 0;}
    .fill-x7 { .translate3d(  12.5px, -12.5px, 0); opacity: 0;}
    .fill-x8 { .translate3d(       0,   -25px, 0);}
    .fill-x9 { .translate3d(   -25px,   -25px, 0); opacity: 0;}
  }
  path {
    .random_cascade(9);
    transition+: opacity @speed @bezier_fadein;
    transition+: -webkit-transform @speed_slow @bezier_deform;
    transition+:         transform @speed_slow @bezier_deform;
  }
}
.unseen-eids {
  .animation(in-bounce @speed_slower);
  .user-select(none);
  position: absolute;
  font-family: @font_mono;
  font-size: 0.625rem;
  line-height: 1em;
  bottom: 3.2em;
  right: 3.2em;
  height: 1.6em;
  min-width: 1.6em;
  padding: 2px 3px;
  color: @red;
  background: @gray_darker;
  border: 2px solid @red;
  border-radius: 2rem;
  box-shadow: 0 2px @gray_darker, 2px 0 @gray_darker, 2px 2px @gray_darker;
  pointer-events: none;
  transition: @speed @bezier_transform;
}
.info-toggle {
  top: @tile;
  left: 0;
}
.landing-toggle {
  top: 0;
  right: 0;
}
.mouse-stats {
  .user-select(none);
  position: fixed;
  color: @gray;
  font-family: @font_mono;
  font-size: 0.625rem;
  line-height: 1em;
  text-align: center;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: .25rem;
  pointer-events: none;
  transition: @speed @speed @bezier_fadein;
  .mq_640({
    opacity: 0;
  });
}
.viewers {
  @max_height: 4 * 2.5em; // first value is number visible upon opening
  .flexy(column);
  position: fixed;
  color: @white;
  bottom: 0;
  left: 0;
  min-width: @tile_menu_min;
  max-width: @tile_menu_max;
  max-height: @max_height;
  padding: 1em 1.5em;
  transition+: all @speed;
  transition+: bottom @now;
  &.overflowing {
    .scrollbar(width; .25em;);
    .scrollbar_thumb(border-radius; .25em);
    max-height: @max_height - 1;
    overflow-y: auto;
    will-change: transform, bottom;
    &:hover {
      .scrollbar_thumb(background; fade(@black, 25));
      .viewer-self {
        .viewer-name {
          &:before {
            .translate3d(0,-100%,0);
            opacity: 0;
          }
          &:after {
            .animation(in-fade-bottom @speed_slower @bezier_fadein);
            content: attr(data-name);
          }
        }
      }
    }
    &:not(:hover) {
      &:not(:active) {
        .user-select(none);
        .translate3d(0,100%,0);
        bottom: @tile;
        .viewer-self {
          ~ .viewer {
            .translate3d(0,100%,0);
          }
        }
      }
    }
    .viewer-self {
      .viewer-name {
        &:before {
          content: attr(data-count);
          transition: @speed_slower @bezier_fadein;
        }
      }
    }
  }
  &:not(.overflowing) {
    &:hover {
      .viewer-self {
        &:only-child {
          .viewer-name {
            &:after {
              .animation(in-fade-bottom @speed_slower @bezier_fadein);
              content: attr(data-name);
            }
          }
        }
      }
    }
    &:not(:hover) {
      &:not(:active) {
        .viewer-self {
          &:only-child {
            path {
              stroke: fade(@white,50) !important;
            }
          }
        }
      }
    }
    .viewer-self {
      &:only-child {
        .viewer-name {
          opacity: 1;
        }
        .icon-user {
          .scale3d(1.5);
          transition: @speed @speed @bezier_deform;
        }
      }
      &:not(:only-child) {
        .icon-user {
          .animation(in-fade-bottom @speed_slow @speed backwards);
        }
        .viewer-name {
          &:after {
            .animation(in-fade-bottom @speed_slower @bezier_fadein);
            content: attr(data-name);
          }
        }
      }
    }
  }
  // TODO deciding whether to edit name inline or not...
  // input {
  //   height: @tile;
  //   max-height: (@tile * 2);
  //   background: none;
  //   border: none;
  //   outline: 0;
  //   color: @white;
  // }
}
.viewer-self {
  .icon-user {
    transition: @speed @now @bezier_deform;
    path {
      stroke: fade(@white,50);
      transition: stroke @speed_slower @bezier_fadein;
    }
  }
  .viewer-name {
    position: relative;
    min-height: 1em * @line_height;
    &:before,
    &:after {
      position: absolute;
      top: 0;
      left: 0;
      white-space: nowrap;
    }
  }
}
.viewer {
  .flexy(center);
  .transition_cascade(10);
  height: @tile / 2;
  min-height: @tile / 2;
  transition: @speed @bezier_deform;
  &:not(:hover) {
    .viewer-name {
      opacity: .25;
    }
  }
  &:not(.viewer-self) {
    .animation(in-fade-bottom @speed_slower @bezier_fadein);
  }
}
.viewer-name {
  margin-left: 1em;
  cursor: default;
}
