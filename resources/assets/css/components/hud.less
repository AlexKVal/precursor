.hud {
  a {
    .icon(stroke; @white);
    .icon(fill; @white);
  }
}
.hud-item {
  position: fixed;
}
.hud-toggle {
  .flexy(center; center);
  font-size: 1.5em;
  width: @tile;
  height: @tile;
  &:not(:hover) {
    opacity: .5;
  }
}
.hud-menu {
  .animation(in-fade-top @run_slower @run_slower @bezier_fadein backwards);
  top: 0;
  left: 0;
  transition: @run @bezier_deform;
  &.bkg-light {
    .icon-menu {
      .icon(stroke; @black);
    }
  }
  &.close,
  &.back {
    .scale3d(.75);
  }
  &.close {
    .stroke-menu-top { .transform(translate3d(  32.32px, -3.03px, 0) rotate3d(0, 0, 1,  45deg));}
    .stroke-menu-mid { .transform(translate3d( -20.71px,    50px, 0) rotate3d(0, 0, 1, -45deg)); opacity: 0;}
    .stroke-menu-btm { .transform(translate3d( -38.39px, 32.32px, 0) rotate3d(0, 0, 1, -45deg));}
  }
  &.back {
    .stroke-menu-top { .transform(translate3d(  20px, 28px, 0) rotate3d(0, 0, 1,  45deg) scale3d(.5, 1, 1));}
    .stroke-menu-mid { .transform(translate3d(     0,    0, 0) rotate3d(0, 0, 0, -45deg) scale3d( 1, 1, 1));}
    .stroke-menu-btm { .transform(translate3d( -51px,  1px, 0) rotate3d(0, 0, 1, -45deg) scale3d(.5, 1, 1));}
  }
  path {
    .transform(translate3d(0,0,0));
    transition+: all @run_slow @now @bezier_deform;
    transition+: stroke @run_fast @run_fast @bezier_fadein;
  }
}
.hud-chat {
  .animation(in-fade-bottom @run_slower @run_slower @bezier_fadein backwards);
  bottom: 0;
  right: 0;
  &:hover {
    .unseen-eids {
      background: @red;
      color: @white;
      border-color: @red;
      height: 1.8em;
      min-width: 1.8em;
      padding: 2px 4px;
      bottom: 3.1em;
      right: 3.1em;
    }
  }
  &:not(.open) {
    width: 3rem !important;
    right: .5rem;
    .stroke-chat {
      .transform(translate3d(0,100%,0) scale3d(0,0,1));
      transition-delay: @now;
    }
  }
  &.open {
    .fill-x1 { .translate3d(    25px,    25px, 0); opacity: 0;}
    .fill-x2 { .translate3d(       0,    25px, 0);}
    .fill-x3 { .translate3d( -12.5px,  12.5px, 0); opacity: 0;}
    .fill-x4 { .translate3d( -12.5px,  12.5px, 0); opacity: 0;}
    .fill-x5 { .translate3d(       0,       0, 0);}
    .fill-x6 { .translate3d(  12.5px, -12.5px, 0); opacity: 0;}
    .fill-x7 { .translate3d(  12.5px, -12.5px, 0); opacity: 0;}
    .fill-x8 { .translate3d(       0,   -25px, 0);}
    .fill-x9 { .translate3d(   -25px,   -25px, 0); opacity: 0;}
  }
  path {
    .random_cascade(9);
    transition+: all @run_slow @bezier_deform;
    transition+: opacity @run @bezier_fadein;
  }
}
.unseen-eids {
  .animation(in-bounce @run_slower);
  .user-select(none);
  position: absolute;
  font-family: @font_mono;
  font-size: 0.625rem;
  line-height: 1em;
  bottom: 3.2em;
  right: 3.2em;
  height: 1.6em;
  min-width: 1.6em;
  padding: 2px 3px;
  color: @red;
  background: @gray_darker;
  border: 2px solid @red;
  border-radius: 2rem;
  box-shadow: 0 2px @gray_darker, 2px 0 @gray_darker, 2px 2px @gray_darker;
  pointer-events: none;
  transition: @run @bezier_deform;
}
.hud-info {
  top: @tile;
  left: 0;
}
.hud-landing {
  top: 0;
  right: 0;
}
.mouse-stats {
  font-family: @font_mono;
  font-size: 0.625rem;
  line-height: 1rem;
  text-align: center;
  bottom: 0;
  left: 0;
  width: 100%;
  .mq_640({
    opacity: 0;
  });
}
.viewers {
  bottom: 0;
  left: 0;
  width: @tile_viewers;
  overflow: hidden;
  &.expanded {
    .viewers-self {
      .viewer {
        height: @tile_viewers_height * 1.5;
        padding-bottom: (@tile_viewers_height * 1.5) - @tile_viewers_height;
      }
      .viewer-name {
        &:before {
          .translate3d(0,-100%,0);
          opacity: 0;
        }
        &:after {
          content: attr(data-name);
        }
      }
    }
  }
  &:not(.expanded) {
    .viewers-others {
      .viewer {
        display: none;
      }
    }
    .viewers-self {
      .viewer {
        width: @tile;
        height: @tile;
      }
      .viewer-toggles {
        display: none;
      }
    }
    .viewer-avatar {
      .scale3d(1.5);
    }
  }
  &:not(.buried) {
    .viewers-self {
      .viewer {
        height: @tile_viewers_height * 1.5;
        padding-bottom: (@tile_viewers_height * 1.5) - @tile_viewers_height;
      }
    }
    .viewer-name {
      &:before {
        content: attr(data-count);
      }
    }
  }
  &.buried {
    .viewer-name {
      &:before {
        content: attr(data-count);
        transition: @run_slower @bezier_deform;
      }
    }
  }
}
.viewers-frame {
  width: 200%;
  max-height: @tile_viewers_height * 4;
  overflow-y: scroll;
  overflow-x: hidden;
  &:not(.viewers-self) {
    .viewer {
      &:not(:hover) {
        .viewer-avatar,
        .viewer-name {
          opacity: .25;
          transition: opacity @run @now @bezier_fadein;
        }
      }
    }
  }
}
.viewers-others {
  &:hover {
    + .viewers-self {
      .viewer {
        .viewer-avatar,
        .viewer-name {
          opacity: .25;
          transition: opacity @now @now @bezier_fadein;
        }
      }
    }
  }
  .viewer-name {
    cursor: default;
  }
}
.viewers-self {
  .viewer {
    cursor: pointer;
    transition: height @now @now;
    &:not(:hover) {
      .viewer-avatar,
      .viewer-name {
        transition: opacity @run @run @bezier_fadein;
      }
    }
    .viewer-toggles {
      .animation(in-fade-bottom @run_slower @bezier_deform);
    }
  }
}
.viewer {
  .animation_cascade(10);
  .animation(in-fade-left @run_slower @bezier_deform backwards);
  .flexy(center);
  position: relative;
  color: fade(@white, 50);
  width: @tile_viewers;
  height: @tile_viewers_height;
  transition: height @run_slower @bezier_deform;
  &:not(:hover) {
    .viewer-toggles {
      .iconpile {
        .translate3d(100%,0,0);
        opacity: 0;
        transition-duration: @run;
      }
    }
  }
}
.viewer-avatar {
  margin-left: 1.25rem;
  margin-right: .5rem;
  transition: @run;
}
.viewer-name {
  position: relative;
  min-height: 1em * @line_height;
  &:before,
  &:after {
    .animation(in-fade-bottom @run_slower @bezier_deform);
    position: absolute;
    top: 0;
    left: 0;
    transition: @run_slower @bezier_deform;
  }
}
.viewer-toggles {
  .flexy();
  position: absolute;
  top: 0;
  right: 0;
  a {
    padding: ((@tile_viewers_height - 1) / 2);
  }
  .iconpile {
    transition: @run_fast @bezier_deform;
  }
}
.viewer-edit-name {
  background: none;
  border: none;
  outline: 0;
  color: @white;
}
