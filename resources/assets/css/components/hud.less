.hud {
  a {
    .icon(stroke; @white);
    .icon(fill; @white);
  }
}
.hud-item {
  position: fixed;
}
.hud-toggle {
  .flexy(center; center);
  font-size: 1.5em;
  width: @tile;
  height: @tile;
  outline: none;
  &:not(:hover) {
    .iconpile {
      opacity: @opacity_darker_gray;
    }
  }
}
.hud-menu,
.hud-roster {
  path {
    transform: translate3d(0, 0, 0);
    transition+: all @run_slow @now @bezier_deform;
    transition+: stroke @run_fast @run_fast @bezier_fadein;
  }
}
.hud-menu {
  .hud_toggle_animation(left);
  top: 0;
  left: 0;
  transition: @run @bezier_deform;
}
.hud-roster {
  .hud_toggle_animation(top);
  top: 0;
  right: 0;
  transition: @run @bezier_deform;
}
.hud-chat {
  .hud_toggle_animation(right);
  bottom: 0;
  right: 0;
  font-size: 1.1rem;
  &:hover {
    .unseen-eids {
      background: @red;
      color: @white;
      border-color: @red;
      height: 1.8em;
      min-width: 1.8em;
      padding: 2px 4px;
      bottom: 3.1em;
      right: 3.1em;
    }
  }
  &.open {
    .icon-chat-morph {
      transform: scale3d(1.325, 1.325, 1);
    }
    .fill-x1 { transform: translate3d(    25px,    25px, 0); opacity: 0;}
    .fill-x2 { transform: translate3d(       0,    25px, 0);}
    .fill-x3 { transform: translate3d( -12.5px,  12.5px, 0); opacity: 0;}
    .fill-x4 { transform: translate3d( -12.5px,  12.5px, 0); opacity: 0;}
    .fill-x5 { transform: translate3d(       0,       0, 0);}
    .fill-x6 { transform: translate3d(  12.5px, -12.5px, 0); opacity: 0;}
    .fill-x7 { transform: translate3d(  12.5px, -12.5px, 0); opacity: 0;}
    .fill-x8 { transform: translate3d(       0,   -25px, 0);}
    .fill-x9 { transform: translate3d(   -25px,   -25px, 0); opacity: 0;}
  }
  &:not(.open) {
    .stroke-chat {
      transform: translate3d(0, 100%, 0) scale3d(0, 0, 1);
      transition-delay: @run_fast;
    }
  }
  .icon-chat-morph {
    transition: @run @bezier_deform;
  }
  .stroke-chat {
    transition-delay: @now;
  }
  path {
    .random_cascade(9);
    transition+: all @run_slow @bezier_deform;
    transition+: opacity @run @bezier_fadein;
  }
}
.unseen-eids {
  animation: in-bounce @run_slower @run backwards;
  user-select: none;
  position: absolute;
  font-family: @font_mono;
  font-size: .625rem;
  line-height: 1em;
  bottom: 3.2em;
  right: 3.2em;
  height: 1.6em;
  min-width: 1.6em;
  padding: 2px 3px;
  color: @red;
  background: @gray_darker;
  border: 2px solid @red;
  border-radius: 2rem;
  box-shadow: 0 2px @gray_darker, 2px 0 @gray_darker, 2px 2px @gray_darker;
  pointer-events: none;
  transition: @run @bezier_deform;
}
.hud-info {
  top: @tile;
  left: 0;
}
.hud-landing {
  top: 0;
  right: 0;
}
.viewers {
  .flexy();
  position: fixed;
  bottom: 0;
  left: 0;
  color: @white;
}
.hud-viewers {
  .hud_toggle_animation(bottom);
  bottom: 0;
  left: 0;
  &:after {
    .holo();
    .flexy(center; center);
    content: attr(data-count);
    font-size: 1rem;
    color: fade(@white, 50);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: transform @run_fast @bezier_deform;
  }
  &.close {
    font-size: 1rem;
  }
  &:not(.close) {
    &:after {
      transform: translateX(@menu_padding);
    }
  }
}
.viewers-list {
  animation: in-fade-bottom @run_slow @bezier_deform backwards;
  width: @tile_viewers;
  overflow: hidden;
  &:hover {
    .viewer {
      animation-duration: @now;
    }
  }
}
.viewers-list-frame {
  .flexy(column);
  width: 200%;
  min-width: 200%;
  max-height: ((@tile_viewers_height * 5) - (@tile_viewers_height / 2));
  overflow-y: scroll;
  overflow-x: hidden;
  &:hover {
    .viewer-self {
      &:not(:hover) {
        &:not(.busy) {
          .viewer-tag {
            opacity: .5;
          }
        }
      }
    }
  }
}
.viewer {
  .selection(@white; (100 * @opacity_darker_dark)); // TODO move viewer list into canvas div
  .animation_cascade(10);
  .flexy(center);
  animation: in-fade-bottom @run_fast @bezier_deform backwards;
  flex: 0 0 @tile_viewers_height;
  width: @tile_viewers;
  padding-left: @tile;
  .mq_640({
    width: ~"calc(100vw - @{tile})";
  });
  &:nth-child(2)   {
    order: 1;
  }
  &:nth-child(3)   {
    order: 2;
  }
  &:nth-child(4)   {
    order: 3;
  }
  &:nth-child(n+5) {
    order: 5;
    &:last-child {
      box-sizing: content-box;     // VETO
      width: @tile_viewers - @tile; // VETO
      padding-bottom: 1rem;
      .mq_640({
        width: ~"calc(100vw -" (2 * @tile) ~")"; // VETO
      });
    }
  }
  &:nth-last-child(-n+4) {
    &:first-child {
      box-sizing: content-box;     // VETO
      width: @tile_viewers - @tile; // VETO
      padding-bottom: 1rem;
      .mq_640({
        width: ~"calc(100vw -" (2 * @tile) ~")"; // VETO
      });
    }
  }
  &.busy {
    ~ .viewer {
      pointer-events: none;
    }
  }
  &:not(.busy) {
    user-select: none;
    cursor: default;
    &.viewer-add {
      cursor: pointer;
      order: 0;
      &.sink {
        order: 100;
      }
    }
    &:not(:hover) {
      &:not(.viewer-self) {
        .viewer-tag {
          opacity: .5;
        }
      }
    }
  }
  &:not(:hover) {
    .viewer-controls {
      &:not(.recording) {
        .viewer-toggle {
          opacity: .2;
        }
      }
    }
  }
}
.viewer-self {
  order: 4;
  .viewer-avatar {
    cursor: pointer;
  }
  .viewer-name {
    cursor: text;
  }
}
.viewer-avatar {
  .flexy(center; center);
  box-sizing: content-box;
  width: @tile_viewers_height;
  min-width: @tile_viewers_height;
  height: @tile_viewers_height;
  padding: 0;
  animation: in-zoom @run_fast @bezier_deform;
}
.viewer-name {
  color: @white;
  min-width: 1em;
  max-width: ((@tile_xl - @tile) - (2 * @tile_viewers_height));
  border: none;
  outline: none;
  background: none;
  white-space: nowrap;
  overflow: hidden;
}
.viewer-controls {
  .flexy();
  position: relative;
  flex: 1;
}
.viewer-toggle {
  .flexy(center; center);
  width: @tile_viewers_height;
  min-width: @tile_viewers_height;
  height: @tile_viewers_height;
  animation: in-fade-bottom @run ease-out backwards;
}
.hud-tray {
  .flexy();
  user-select: none;
  bottom: 0;
  left: 0;
  width: 100%;
  max-width: 100%;
  height: @tile;
  pointer-events: none;
  .mq_640({
    display: none;
  });
  .mouse-stats,
  .new-here-button {
    &:before {
      content: attr(data-text);
    }
  }
}
.new-here {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: @tile;
  &:hover {
    ~ .mouse-stats {
      opacity: 0;
      transition-duration: @run;
    }
  }
}
.new-here-items,
.new-here-button {
  pointer-events: auto;
}
.new-here-items {
  .flexy(center; center);
  transition: transform @run @run_slower @bezier_deform;
  position: absolute;
  top: 100%;
  left: 0;
  width: 100vw;
  height: 100%;
  background: @dye_outer;
  &.opened,
  &:hover {
    transform: translate3d(0, -100%, 0);
    transition-delay: @now;
  }
}
.new-here-button {
  .flexy(center; center);
  color: @white;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  width: 2 * @tile;
  height: 100%;
  margin: auto;
  &:before,
  &:after {
    animation: in-fade-bottom @run_slow @bezier_deform;
  }
  &:hover {
    color: @white;
  }
  &:not(:hover) {
    opacity: @opacity_darker_light;
  }
}
.new-here-item {
  padding: 0 @menu_padding;
}
.doc-stats {
  .flexy(center; center);
  color: @white;
  font-family: @font_mono;
  font-size: .625rem;
  text-align: center;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1.125rem;
  animation: in-fade-bottom @run_slow @run @bezier_deform backwards;
  .mouse-stats {
    opacity: @opacity_darker_dark;
    pointer-events: auto;
    cursor: pointer;
  }
  .privacy-stats {
    .icon(stroke; @white);
    .icon(fill; @white);
    margin-left: 1em;
    opacity: @opacity_darker_dark;
    pointer-events: auto;
    cursor: pointer;
    &:hover {
      opacity: 1;
    }
  }
}
.rejected-txes-a,
.rejected-txes-b {
  animation: rejected-pulse @run;
}
