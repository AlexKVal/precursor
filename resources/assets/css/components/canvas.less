.canvas {
  .flex(1);
  .transform-origin(0 0);
  position: relative;
  transition: @run_slow @bezier_transform;
  will-change: transform;
  &:active {
    + .chat {
      .user-select(none);
      pointer-events: none;
    }
  }
  &:not(:active) {
    &:not(:hover) {
      .user-select(none);
    }
  }
}
.canvas-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: @dye_inner;
  will-change: transform;
  transition: @run @bezier_transform;
}
.canvas-frame {
  .user-select(none);
  position: relative;
  transition: @now @run_slower;
  &:not(:hover) {
    ~ .radial-tip {
      display: none;
    }
  }
  top: 0;
  left: 0;
  cursor: crosshair;
  &.tool-text {
    cursor: text;
  }
  &.tool-select {
    cursor: default;
  }
  &.tool-text-move {
    cursor: move;
    .text-layer-input {
      cursor: move;
    }
  }
}
.grid-background {
  transition: opacity @run_slow @run_fast @bezier_fadein;
}
.grid-big,
.grid-small {
  path {
    stroke: @gray_dark;
    transition: stroke @run_fast @now @bezier_fadein;
  }
}
.layers {
  &.live {
    &.layer-handle {
      ~ .layer-outline {
        transition-delay: @run_fast;
      }
    }
  }
}
.signup-layer {
  cursor: pointer;
  fill: transparent;
}
.selectable-group {
  .layer-handle {
    stroke: transparent;
    stroke-width: 20;
    &:hover {
      ~ .layer-outline {
        stroke: @white;
        stroke-width: 4;
        transition-duration: @run_fast;
        &.selected {
          stroke: @color_select_hover;
        }
      }
    }
  }
}
.shape-layer {
  stroke: none;
  fill: none;
  &.layer-in-progress {
    stroke: @color_select;
    stroke-width: 2;
    &.selection {
      stroke: @white;
      stroke-width: 1;
    }
  }
  &.interactive-fill {
    &:not(.invalid) {
      fill: transparent;
      cursor: pointer;
    }
    &.selected-group {
      cursor: move;
    }
  }
  &.layer-outline {
    stroke: @gray_light;
    stroke-width: 2;
    pointer-events: none;
    transition: @run @bezier_transform;
    &.selected {
      stroke-width: 2;
      stroke: @color_select;
    }
  }
}
.text-layer {
  .user-select(none);
  fill: @gray_light;
  transition: @run @bezier_transform;
  &.editable {
    &:hover {
      fill: @color_select_hover;
    }
  }
  &.selected {
    fill: @color_select;
  }
  &.layer-in-progress {
    fill: @color_select;
    stroke-opacity: 1;
  }
  &.interactive-fill {
    cursor: pointer;
  }
}
.static {
  .interactive-fill {
    display: none;
  }
}
.selectable-group {
  &:hover {
    .text-layer {
      fill: @color_select_hover;
      &.selected {
        fill: @color_select;
      }
    }
  }
}
.mouse-tool {
  fill: none;
  stroke-width: 8;
}
.action-info {
  margin-top: auto;
}
.svg-text-form {
  input[type="text"] {
    .placeholder_style(color; @gray);
    color: @color_select_hover;
    background: none;
    border: none;
    outline: none;
  }
}
.text-size-helper {
  fill: transparent;
}
  //‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾//
 //  Layer Properties Right-Click Menu  //
//_____________________________________//
.layer-properties {
  .flexy(column);
  width: @tile_menu_min;
  padding-top: 5px; // keeps adaptive placeholder from getting cut off
  .layer-property-id {
    background: @dye_inner;
    &:not(:focus) {
      box-shadow: 0 -1px @gray_dark inset;
      border-bottom-width: 0;
    }
  }
  .layer-property-target {
    background: @dye_inner;
    &:focus {
      border-top-color: transparent !important;
      box-shadow: 0 -1px @blue;
      ~ .property-dropdown-targets {
        &:not(.expanded) {
          border-bottom-color: @blue;
        }
      }
    }
    &:not(:focus) {
      border-top-color: transparent;
    }
    &.expanded {
      border-bottom-color: transparent;
    }
  }
}
.layer-property {
  .flexy(column);
}
.layer-property-button {
  font-size: 1.5em; // for ellipsis icon hack
  line-height: 0; // for ellipsis icon hack
  top: 0;
  right: 0;
  width: 3rem;
  height: 3rem;
  margin: -3rem 0 0 auto;
  padding-bottom: 1rem; // for ellipsis icon hack
  &:hover {
    color: @blue;
  }
}
.property-dropdown-targets {
  .flexy(column);
  .scrollbar_hide(); // TODO we should calculate to get this effect in the dom
  max-height: (@tile * 5);
  background: @gray_darker;
  border: 1px solid @gray_dark;
  border-top: none;
  overflow-y: auto;
  transition: max-height @run_slow @bezier_transform;
  &:not(.expanded) {
    display: none;
    // transition keeps making the dropdown clip out of place :(
    // max-height: 0;
    // margin-top: -1px;
  }
}
.property-dropdown-target {
  .flex(0 0 3em);
  color: @gray_dark;
  line-height: 1em;
  padding: 1em;
  border: 1px solid transparent;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transition+: color @run_fast @bezier_fadein;
  transition+: border @run_fast @bezier_fadein;
  transition+: text-indent @run @bezier_transform;
  &:hover {
    text-indent: 3px;
    border-color: @gray_lighter;
    transition-duration+: @now;
    transition-duration+: @now;
    transition-duration+: @run;
  }
}
.edit-handles {
  .edit-handle {
    fill: @color_select;
    &.bottom.right {
      cursor: nwse-resize;
    }
    &.top.left {
      cursor: nwse-resize;
    }
    &.bottom.left {
      cursor: nesw-resize;
    }
    &.top.right {
      cursor: nesw-resize;
    }
  }
}
.handle-outline {
  stroke: @color_select;
  stroke-dasharray: 1,1;
}
