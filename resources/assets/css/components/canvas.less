.app-canvas {
  .flex(1);
  position: relative;
}
#svg-canvas {
  .user-select(none);
  &:not(:hover) {
    ~ .radial-tip {
      display: none;
    }
  }
}
#grid,
#small-grid {
  path {
    stroke: @gray_dark;
  }
}
.layers {
  &.live {
    &.layer-handle {
      ~ .layer-outline {
        transition-delay: @speed_fast;
      }
    }
  }
}
.selectable-group {
  .layer-handle {
    stroke: transparent;
    stroke-width: 20;
    &:hover {
      ~ .layer-outline {
        stroke: @white;
        stroke-width: 4;
        transition-duration: @speed_fast;
        &.selected {
          stroke: @color_select_hover;
        }
      }
    }
  }
}
.shape-layer {
  stroke: none;
  fill: none;
  &.layer-in-progress {
    stroke: @color_select;
    stroke-width: 2;
    &.selection {
      stroke: @white;
      stroke-width: 1;
    }
  }
  &.interactive-fill {
    &:not(.invalid) {
      fill: transparent;
      cursor: pointer;
    }
    &.selected-group {
      cursor: move;
    }
  }
  &.layer-outline {
    stroke: @gray_light;
    stroke-width: 2;
    pointer-events: none;
    transition: @speed @bezier_transform;
    &.selected {
      stroke-width: 2;
      stroke: @color_select;
    }
  }
}
.text-layer {
  .user-select(none);
  fill: @gray_light;
  &.editable {
    &:hover {
      fill: @color_select_hover;
    }
  }
  &.selected {
    fill: @color_select;
  }
  &.layer-in-progress {
    fill: @color_select;
    stroke-opacity: 1;
  }
  &.interactive-fill {
    cursor: pointer;
  }
}
.static {
  .interactive-fill {
    display: none;
  }
}
.selectable-group {
  &:hover {
    .text-layer {
      fill: @color_select_hover;
      &.selected {
        fill: @color_select;
      }
    }
  }
}
.mouse-stats {
  .user-select(none);
  position: absolute;
  color: @gray;
  font-family: @font_mono;
  font-size: 0.625rem;
  line-height: 1em;
  text-align: center;
  bottom: 0;
  width: 100%;
  left: 0;
  padding: .5em;
  pointer-events: none;
  transition: @speed @bezier_fadein;
  .mq_640({
    opacity: 0;
  });
}
.mouse-tool {
  fill: none;
  stroke-width: 8;
}
.main-actions {
  .flexy(column);
  .user-select(none);
  position: absolute;
  top: 0;
  left: 0;
  width: @tile;
  height: 100%;
  pointer-events: none;
  a {
    .flexy(center, center);
    width: 100%;
    height: @tile;
    cursor: pointer;
    pointer-events: auto;
    &:not(:hover) {
      .icon_stroke(@gray);
    }
    i {
      svg {
        font-size: 1.5em;
      }
    }
  }
}
.main-menu-button {
  .flexy(center, center);
  .icon_stroke(@gray);
  position: absolute;
  font-size: 1.5rem;
  top: 0;
  left: 0;
  width: @tile;
  height: @tile;
  transition: @speed;
  z-index: @zindex_main_menu;
  &:hover {
    .icon_stroke(@white);
    &.bkg-light {
      .icon_stroke(@gray_darkest);
    }
  }
  path {
    -webkit-transition-property: -webkit-transform, opacity, stroke;
    transition-property: transform, opacity, stroke;
    transition-duration: @speed_slow, @speed, @speed_fast;
    transition-timing-function: @bezier_transform, @bezier_fadein, @bezier_fadein;
  }
  &.close,
  &.back {
    font-size: 1rem;
    path {
      transition-timing-function: @bezier_bounce, @bezier_fadein, @bezier_fadein;
    }
  }
  &.close {
    path {
      &[class*="top"] {
        .transform(translate3d(32.32px, -3.03px, 0) rotate3d(0, 0, 1, 45deg));
      }
      &[class*="btm"] {
        .transform(translate3d(-38.39px, 32.32px, 0) rotate3d(0, 0, 1, -45deg));
      }
    }
    .menu-mid-stroke {
      opacity: 0;
      .transform(translate3d(-20.71px, 50px, 0) rotate3d(0, 0, 1, -45deg));
    }
  }
  &.back {
    path {
      &:not(.menu-mid-stroke) {
        &[class*="left"] {
          opacity: 0;
        }
        &[class*="right"] {
          stroke-linecap: square;
        }
      }
      &[class*="top"] {
        .transform(translate3d(-12.68px, -3.03px, 0) rotate3d(0, 0, 1, 45deg));
      }
      &[class*="btm"] {
        .transform(translate3d(-83.39px, 32.32px, 0) rotate3d(0, 0, 1, -45deg));
      }
    }
  }
}
.about-info {
  .flexy(center, center);
  position: absolute;
  top: @tile;
  left: 0;
  width: @tile;
  height: @tile;
  &:not(:hover) {
    .icon_stroke(@gray);
  }
  i {
    svg {
      font-size: 1.5em;
    }
  }
}
.unseen-eids {
  .animation(in-bounce (@speed * 2));
  .user-select(none);
  position: absolute;
  font-family: @font_mono;
  font-size: 0.625rem;
  line-height: 1em;
  bottom: 3.2em;
  right: 3.2em;
  height: 1.6em;
  min-width: 1.6em;
  padding: 2px 3px;
  color: lighten(#c0392b, 10);
  background: @gray_darker;
  border: 2px solid lighten(#c0392b, 10);
  border-radius: 2rem;
  box-shadow: 0 2px @gray_darker, 2px 0 @gray_darker, 2px 2px @gray_darker;
  pointer-events: none;
  transition: @speed @bezier_transform;
}
.action-info {
  margin-top: auto;
}
.svg-text-form {
  input[type="text"] {
    .placeholder_style(color; @gray);
    color: @color_select_hover;
    background: none;
    border: none;
    outline: none;
  }
}
  //‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾//
 //  Radial Right-Click Menu  //
//___________________________//
.radial-menu {
  position: fixed;
  width: (@radial_menu_size * 1.5);
  height: (@radial_menu_size * 1.5);
  z-index: @zindex_radial_menu;
}
.radial-button {
  fill: @gray_darker;
  stroke: @gray_dark;
  cursor: pointer;
  transition: @speed @bezier_transform;
  &:hover {
    .transform(translate3d(-19px, -19px, 0); scale3d(1.1, 1.1, 1));
    fill: @gray_dark;
    transition-duration: @speed_fast;
  }
  &:active {
    fill: @gray_darker;
  }
}
.radial-tool-type {
  .flexy(center, center, column);
  .user-select(none);
  pointer-events: none;
  position: absolute;
  text-transform: capitalize;
  &:nth-of-type(1) { top: 100px; left: 215px; }
  &:nth-of-type(2) { top: 170px; left: 260px; }
  &:nth-of-type(3) { top: 240px; left: 215px; }
  &:nth-of-type(4) { top: 240px; left: 140px; }
  &:nth-of-type(5) { top: 170px; left: 100px; }
  &:nth-of-type(6) { top: 100px; left: 135px; }
  i {
    margin-bottom: .25em;
  }
}
.radial-menu-nub {
  @size: .5rem;
  width: @size;
  height: @size;
  border-radius: @size;
  background: @gray_dark;
  position: absolute;
  top: (((@radial_menu_size * 1.5) - @size) / 2);
  left: (((@radial_menu_size * 1.5) - @size) / 2);
  cursor: default;
}
.radial-tip {
  position: absolute;
  top: -@tile;
  left: -@tile;
  white-space: nowrap;
  .mq_640({
    display: none;
  });
}
  //‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾//
 //  Layer Properties Right-Click Menu  //
//_____________________________________//
.layer-properties {
  .flexy(column);
  width: @tile_chat;
  padding-top: 5px; // keeps adaptive placeholder from getting cut off
  .layer-property-id {
    background: @app_background;
    &:not(:focus) {
      box-shadow: 0 -1px @gray_dark inset;
      border-bottom-width: 0;
    }
  }
  .layer-property-target {
    background: @app_background;
    &:focus {
      border-top-color: transparent !important;
      box-shadow: 0 -1px @blue;
      ~ .property-dropdown-targets {
        &:not(.expanded) {
          border-bottom-color: @blue;
        }
      }
    }
    &:not(:focus) {
      border-top-color: transparent;
    }
    &.expanded {
      border-bottom-color: transparent;
    }
  }
}
.layer-property {
  .flexy(column);
}
.layer-property-button {
  font-size: 1.5em; // for ellipsis icon hack
  line-height: 0; // for ellipsis icon hack
  top: 0;
  right: 0;
  width: 3rem;
  height: 3rem;
  margin: -3rem 0 0 auto;
  padding-bottom: 1rem; // for ellipsis icon hack
  &:hover {
    color: @blue;
  }
}
.property-dropdown-targets {
  .flexy(column);
  .scrollbar_hide(); // TODO we should calculate to get this effect in the dom
  max-height: (@tile * 5);
  background: @gray_darker;
  border: 1px solid @gray_dark;
  border-top: none;
  overflow-y: auto;
  transition: max-height @speed_slow @bezier_transform;
  &:not(.expanded) {
    display: none;
    // transition keeps making the dropdown clip out of place :(
    // max-height: 0;
    // margin-top: -1px;
  }
}
.property-dropdown-target {
  .flex(0 0 3em);
  color: @gray_dark;
  line-height: 1em;
  padding: 1em;
  border: 1px solid transparent;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transition+: color @speed_fast @bezier_fadein;
  transition+: border @speed_fast @bezier_fadein;
  transition+: text-indent @speed @bezier_transform;
  &:hover {
    text-indent: 3px;
    border-color: @gray_lighter;
    transition-duration+: 0ms;
    transition-duration+: 0ms;
    transition-duration+: @speed;
  }
}
.edit-handles {
  .edit-handle {
    fill: @color_select;
    &.bottom.right {
      cursor: nwse-resize;
    }
    &.top.left {
      cursor: nwse-resize;
    }
    &.bottom.left {
      cursor: nesw-resize;
    }
    &.top.right {
      cursor: nesw-resize;
    }
  }
}
.handle-outline {
  stroke: @color_select;
  stroke-dasharray: 1,1;
}
