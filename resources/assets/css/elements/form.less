input {
  &[data-adaptive] {
    &[required] {
      width: 100%;
      line-height: 1rem;
      height: @tile;
      border: 1px solid @gray_dark;
      outline: none;
      padding: @menu_padding;
      &:focus {
        border-color: @color_select;
        + label {
          &[data-placeholder] {
            &:before {
              color: @color_select;
            }
          }
        }
      }
      &:focus,
      &:valid {
        + label {
          &[data-placeholder] {
            margin-top: -4.5rem;
            margin-bottom: 3.5rem;
            transition-duration: @run;
            &:before {
              font-size: 0.75rem;
              background-size: 100% 5px;
              transition-duration: @run;
            }
          }
        }
      }
      &:invalid {
        + label {
          &[data-placeholder] {
            &[data-placeholder-nil] {
              &:before {
                content: attr(data-placeholder-nil);
              }
            }
          }
        }
      }
      &:focus {
        + label {
          &[data-placeholder] {
            &[data-placeholder-busy] {
              &:before {
                content: attr(data-placeholder-busy);
              }
            }
          }
        }
      }
      &:valid {
        + label {
          &[data-placeholder] {
            &[data-placeholder] {
              &:before {
                content: attr(data-placeholder);
              }
            }
          }
        }
      }
      &:valid {
        &:not(:focus) {
          + label {
            &[data-placeholder] {
              &[data-placeholder-forgot] {
                &:before {
                  color: @gray_dark;
                  content: attr(data-placeholder-forgot);
                }
              }
            }
          }
        }
      }
    }
    + label {
      &[data-placeholder] {
        margin-top: -2.5rem;
        margin-bottom: 1.5rem;
        white-space: nowrap;
        pointer-events: none;
        transition: @run_slow @bezier_deform;
        &:before {
          content: attr(data-placeholder);
          height: 1rem;
          color: @gray_dark;
          line-height: 1rem;
          margin: 1rem;
          padding: 0 3px;
          transition: @run_slow @bezier_deform;
          background-image: linear-gradient(to bottom, @dye_inner, @dye_inner);
          background-size: 100% 0;
          background-repeat: no-repeat;
          background-position: center;
          user-select: none;
        }
      }
    }
  }
}
.adaptive {
  .flexy(column);
  position: relative;
  width: 100%;
  margin-bottom: 1em;
  textarea {
    min-height: @tile;
    max-height: 5 * @tile;
    padding: 1.25rem;
  }
  input[type="text"] {
    padding: 1.25rem 0 1.25rem 1.25rem;
  }
  textarea,
  input[type="text"] {
    .inline(@gray_lighter);
    order: 2;
    height: @tile;
    outline: none;
    border: none;
    resize: vertical;
    &:focus,
    &:valid {
      + label {
        transform: translate(-12.5%, -50%) scale(.75);
        transition-duration: @run_fast;
        &:before {
          background-size: 100% 5px;
          transition-duration: @run;
        }
      }
    }
    &:invalid {
      + label {
        &[data-placeholder] {
          &:before {
            content: attr(data-placeholder);
          }
        }
      }
    }
    &:focus {
      .inline(@color_select);
      + label {
        &:before {
          color: @color_select;
        }
        &[data-focus] {
          &:before {
            content: attr(data-focus);
          }
        }
      }
    }
    &:focus {
      &:valid {
        + label {
          &[data-typing] {
            &:before {
              content: attr(data-typing);
            }
          }
        }
      }
    }
    &:focus {
      &:valid {
        &[data-warning] {
          .inline(@red);
        }
        + label {
          &[data-warning] {
            &:before {
              color: @red;
              content: attr(data-warning);
            }
          }
        }
      }
    }
    &:valid {
      &:not(:focus) {
        + label {
          &[data-forgot] {
            &:before {
              content: attr(data-forgot);
            }
          }
        }
      }
    }
  }
  label {
    position: absolute;
    order: 1;
    top: 0;
    left: 0;
    max-width: 100%;
    padding: 1.25rem;
    overflow: hidden;
    white-space: nowrap;
    user-select: none;
    pointer-events: none;
    transition: @run_slow @bezier_deform;
    &:before {
      .flexy();
      content: attr(data-label);
      color: @gray_light;
      padding: 0 3px;
      transition: @run_slow @bezier_deform;
      background-image: linear-gradient(to bottom, @dye_outer, @dye_outer);
      background-size: 100% 0;
      background-repeat: no-repeat;
      background-position: center;
      user-select: none;
    }
  }
}
.menu {
  input {
    &[data-adaptive] {
      &[required] {
        &:not(:focus) {
          border-color: @gray_light;
        }
      }
      + label {
        &[data-placeholder] {
          &:before {
            color: @gray_light;
            background-image: linear-gradient(to bottom, @dye_outer, @dye_outer);
          }
        }
      }
    }
  }
}
input {
  &[data-white] {
    &[data-adaptive] {
      &[required] {
        &:not(:focus) {
          border-color: @gray_light;
        }
      }
      + label {
        &[data-placeholder] {
          &:before {
            color: @gray_light;
            background-image: linear-gradient(to bottom, @dye_outer, @dye_outer);
          }
        }
      }
    }
  }
}

@adapt_size: 4em;
@adapt_line: (@adapt_size / 3);
@adapt_tiny: .25em;
.adaptive-placeholder {
  position: relative;
  width: 100%;
  min-height: @adapt_size;
  padding: (@adapt_line - ((@line_height - @adapt_line) / 2)) @adapt_line;
  border: 1px solid @gray_light;
  outline: none;
  transition: @run ease-in-out;
  &:after {
    transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
    transform-origin: left;
    color: @gray_light;
    position: absolute;
    top: (@adapt_size - @adapt_tiny) / 2;
    left: (@adapt_line - @adapt_tiny);
    padding: 0 @adapt_tiny;
    line-height: @adapt_tiny;
    background-color: fade(@dye_outer, 0);
    pointer-events: none;
    user-select: none;
    transition: @run ease-in-out;
  }
  &:focus {
    border-color: @color_select;
    &:after {
      color: @color_select;
    }
  }
  &:focus,
  &:not(:empty) {
    transition-duration: @run_fast;
    &:after {
      transform: translate3d(0, (-@adapt_size / 2), 0) scale3d(.8, .8, 1);
      background-color: @dye_outer;
      transition-duration: @run_fast;
    }
  }
  &:not(:empty) {
    &:after {
      content: attr(data-after);
    }
  }
  &:empty {
    &:after {
      content: attr(data-before);
    }
  }
  &:not(:empty) {
    &:not(:focus) {
      border-color: @red;
      &:after {
        content: attr(data-forgot);
        color: @red;
      }
    }
  }
}
.disabled-input {
  .holo();
  color: @gray;
  position: relative;
  width: 100%;
  min-height: @adapt_size;
  padding: (@adapt_line - ((@line_height - @adapt_line) / 2)) @adapt_line;
  border: 1px dashed @gray_lighter;
  &:after {
    content: attr(data-after);
    color: @gray_light;
    position: absolute;
    top: (@adapt_size - @adapt_tiny) / 2;
    left: (@adapt_line - @adapt_tiny);
    padding: 0 @adapt_tiny;
    line-height: @adapt_tiny;
    background-color: @dye_outer;
    transform: translate3d(0, (-@adapt_size / 2), 0) scale3d(.8, .8, 1);
    transform-origin: left;
  }
}
